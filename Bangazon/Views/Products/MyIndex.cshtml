@model IEnumerable<Bangazon.Models.ProductViewModels.ProductDetailViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>My Products</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

@* If model does not contain any products then displaying  "No results found"
*@
@if (Model.Count() is 0)
{
    <div>
        <h3>No results found.</h3>
    </div>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Product.DateCreated)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Product.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Product.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Product.Price)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.QuantityRemaining)
                </th>
                <th>
                    Quantity Sold
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Product.City)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Product.ImagePath)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Product.User.FullName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Product.ProductType)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Product.DateCreated)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Product.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Product.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Product.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.QuantityRemaining)
                    </td>
                    @* On the line below we are getting items sold by subtracting the quantity remaining from the total quantity*@
                    <td>
                        @(item.Product.Quantity - item.QuantityRemaining)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Product.City)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Product.ImagePath)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Product.User.FullName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Product.ProductType.Label)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Product.ProductId">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Product.ProductId">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Product.ProductId">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

}
